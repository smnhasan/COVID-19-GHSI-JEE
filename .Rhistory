library(lmtest)
require(maptools)
library(XLConnect)
require(maptools)
####MAP total deaths per million
library(dplyr)
library(stringr)
library(ggplot2)
library(maps)
####MAP total deaths per million
library(dplyr)
library(stringr)
library(ggplot2)
library(maps)
install.packages("maps")
library(maps)
options(scipen = 999) ## To disable scientific notation
world <- map_data("world")
worldplot <- ggplot() +
geom_polygon(data = world, aes(x=long, y = lat, group = group)) +
coord_fixed(1.3)
worldplot
worldgovt <- read.csv("F:\\ResearchProject\\Jamal Sir\\COVID19-Factors\\TD.csv", header = TRUE)
worldgovt <- read.csv("F:\\ResearchProject\\Jamal Sir\\COVID19-Factors\\TD.csv", header = TRUE)
worldgovt <- select(worldgovt, region = location, "Tdlog" = `Tdlog`, "CC" = ï..iso_code)
head(worldgovt)
diff <- setdiff(world$region, worldgovt$region)
## Clean the dataset accordingly
worldgovt <- worldgovt %>%
## Recode certain entries
mutate(region = recode(str_trim(region), "United States" = "USA",
"United Kingdom" = "UK",
"Korea (Rep.)" = "South Korea",
"Congo (Dem. Rep.)" = "Democratic Republic of the Congo",
"Congo (Rep.)" = "Republic of Congo")) %>%
## Editing the "North Korea" entry is a little trickier for some reason
mutate(region = case_when((CC == "PRK") ~ "North Korea",
TRUE ~ as.character(.$region)))
## Make the HDI numeric
worldgovt$TD <- as.numeric(as.character(worldgovt$Tdlog))
worldSubset <- inner_join(world, worldgovt, by = "region")
head(worldSubset)
## Let's ditch many of the unnecessary elements
plain <- theme(
axis.text = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.title = element_blank(),
panel.background = element_rect(fill = "white"),
plot.title = element_text(hjust = 0.5)
)
worldTD <- ggplot(data = worldSubset, mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_polygon(aes(fill = TD)) +
scale_fill_distiller(palette ="Reds", direction = 1) + # or direction=1
ggtitle("Total COVID-19 deaths by country \n log (per million)") +
plain
worldTD
setEPS()
postscript("worldmap.eps")
plot(worldTD)
dev.off()
cairo_ps(filename = "worldmap.eps",
width = 7, height = 7, pointsize = 12,
fallback_resolution = 300)
print(worldTD)
dev.off()
print(worldTD)
#####IFR T-series##########
library(ggplot2)
theme_set(theme_minimal())
dpm <- read.csv("F:\\ResearchProject\\Jamal Sir\\COVID19-Factors\\IFR.csv", header = TRUE)
dpm <- read.csv("F:\\ResearchProject\\Jamal Sir\\COVID19-Factors\\IFR.csv", header = TRUE)
dpm$date <- as.Date(dpm$ï..date)
ggplot(data = dpm, aes(x = date, y = IFR_mean))+
geom_line(color = "#00AFBB", size = 2) +labs(y="Infection fatality rate", x = "Months")
#####IFR T-series##########
library(ggplot2)
theme_set(theme_minimal())
dpm <- read.csv("F:\\ResearchProject\\Jamal Sir\\COVID19-Factors\\IFR.csv", header = TRUE)
dpm$date <- as.Date(dpm$ï..date)
ggplot(data = dpm, aes(x = date, y = IFR_mean))+
geom_line(color = "#00AFBB", size = 2) +labs(y="Infection fatality rate", x = "Months")
#####IFR T-series##########
library(ggplot2)
theme_set(theme_minimal())
dpm <- read.csv("F:\\ResearchProject\\Jamal Sir\\COVID19-Factors\\IFR.csv", header = TRUE)
dpm$date <- as.Date(dpm$ï..date)
ggplot(data = dpm, aes(x = date, y = IFR_mean))+
geom_line(color = "#00AFBB", size = 2) +labs(y="Infection fatality rate", x = "Months")
ggplot(data = dpm, aes(x = date, y = IFR))+
geom_line(color = "#00AFBB", size = 2) +labs(y="Infection fatality rate", x = "Months")
dpm <- read.csv("F:\\ResearchProject\\Jamal Sir\\COVID19-Factors\\CFRDate.csv", header = TRUE)
#####IFR T-series##########
library(ggplot2)
theme_set(theme_minimal())
dpm <- read.csv("F:\\ResearchProject\\Jamal Sir\\COVID19-Factors\\IFR.csv", header = TRUE)
dpm$date <- as.Date(dpm$ï..date)
ggplot(data = dpm, aes(x = date, y = IFR))+
geom_line(color = "#00AFBB", size = 2) +labs(y="Infection fatality rate", x = "Months")
dpm <- read.csv("F:\\ResearchProject\\Jamal Sir\\COVID19-Factors\\IFR.csv", header = TRUE)
dpm
dpm$date <- as.Date(dpm$ï..date)
dpm
dpm <- read.csv("F:\\ResearchProject\\Jamal Sir\\COVID19-Factors\\IFR.csv", header = TRUE)
dpm$date <- as.Date(dpm$ï..date)
ggplot(data = dpm, aes(x = date, y = IFR))+
geom_line(color = "#00AFBB", size = 2) +labs(y="Infection fatality rate", x = "Months")
dpm <- read.csv("F:\\ResearchProject\\Jamal Sir\\COVID19-Factors\\IFR.csv", header = TRUE)
dpm$date <- as.Date(dpm$ï..date)
dpm
dpm <- read.csv("F:\\ResearchProject\\Jamal Sir\\COVID19-Factors\\IFR.csv", header = TRUE)
dpm$date <- as.Date(dpm$ï..date)
ggplot(data = dpm, aes(x = date, y = IFR))+
geom_line(color = "#00AFBB", size = 2) +labs(y="Infection fatality rate", x = "Months")
dpm <- read.csv("F:\\ResearchProject\\Jamal Sir\\COVID19-Factors\\CFRDate.csv", header = TRUE)
dpm <- read.csv("F:\\ResearchProject\\Jamal Sir\\COVID19-Factors\\IFR.csv", header = TRUE)
dpm$date <- as.Date(dpm$ï..date)
ggplot(data = dpm, aes(x = date, y = IFR))+
geom_line(color = "#00AFBB", size = 2) +labs(y="Infection fatality rate", x = "Months")
dpm <- read.csv("F:\\ResearchProject\\Jamal Sir\\COVID19-Factors\\IFR.csv", header = TRUE)
dpm
dpm$date <- as.Date(dpm$ï..date)
dpm$date
dpm <- read.csv("F:\\ResearchProject\\Jamal Sir\\COVID19-Factors\\IFR.csv", header = TRUE)
dpm$date <- as.Date(dpm$ï..date)
ggplot(data = dpm, aes(x = date, y = IFR))+
geom_line(color = "#00AFBB", size = 2) +labs(y="Infection fatality rate", x = "Months")
dpm <- read.csv("F:\\ResearchProject\\Jamal Sir\\COVID19-Factors\\IFR.csv", header = TRUE)
dpm$date <- as.Date(dpm$ï..date)
ggplot(data = dpm, aes(x = date, y = IFR))+
geom_line(color = "#00AFBB", size = 2) +labs(y="Infection fatality rate", x = "Months")
dpm <- read.csv("F:\\ResearchProject\\Jamal Sir\\COVID19-Factors\\IFR.csv", header = TRUE)
dpm$date <- as.Date(dpm$ï..date)
ggplot(data = dpm, aes(x = date, y = IFR))+
geom_line(color = "#00AFBB", size = 2) +labs(y="Infection fatality rate", x = "Months")
#####IFR T-series##########
library(ggplot2)
theme_set(theme_minimal())
dpm <- read.csv("F:\\ResearchProject\\Jamal Sir\\COVID19-Factors\\IFR.csv", header = TRUE)
dpm$date <- as.Date(dpm$ï..date)
ggplot(data = dpm, aes(x = date, y = IFR))+
geom_line(color = "#00AFBB", size = 2) +labs(y="Infection fatality rate", x = "Months")
############regression model March 11###########
options(scipen = 999)
COVID_d <- read.csv("F:\\ResearchProject\\Jamal Sir\\COVID19-Factors\\datamarch.csv")
lm <- lm(total_deaths_per_million ~ GHSI + population_density + aged_65_older
+ gdp_per_capita + WGI +
total_cases_per_million + total_tests_per_thousand +
offset(log(Day)), data = COVID_d)
summary(lm)
lm <- lm(total_deaths_per_million ~ RS + population_density + aged_65_older
+ gdp_per_capita + WGI +
total_cases_per_million + total_tests_per_thousand +
offset(log(Day)), data = COVID_d)
summary(lm)
############NB regression model###########
model.3nb <- glm.nb(total_deaths_per_million ~ GHSI + population_density + aged_65_older
+ gdp_per_capita + WGI +
total_cases_per_million + total_tests_per_thousand +
offset(log(Day)), data = COVID_d)
############regression model###########
COVID_d <- read.csv("F:\\ResearchProject\\Jamal Sir\\COVID19-Factors\\datajune.csv")
head(COVID_d)
lm <- lm(total_deaths_per_million ~ GHSI + population_density + aged_65_older
+ gdp_per_capita + WGI +
total_cases_per_million + total_tests_per_thousand +
offset(log(Day)), data = COVID_d)
summary(lm)
############NB regression model###########
model.3nb <- glm.nb(total_deaths_per_million ~ GHSI + population_density + aged_65_older
+ gdp_per_capita + WGI +
total_cases_per_million + total_tests_per_thousand +
offset(log(Day)), data = COVID_d)
summary(model.3nb)
exp(model.3nb$coefficients)
############NB regression model###########
model.3nb <- glm.nb(total_deaths_per_million ~ RS + population_density + aged_65_older
+ gdp_per_capita + WGI +
total_cases_per_million + total_tests_per_thousand +
offset(log(Day)), data = COVID_d)
############NB regression model###########
model.3nb <- glm.nb(total_deaths_per_million ~ RS + population_density + aged_65_older
+ gdp_per_capita + WGI +
total_cases_per_million + total_tests_per_thousand +
offset(log(Day)), data = COVID_d)
summary(model.3nb)
library(MASS)
require(foreign)
require(ggplot2)
require(maptools)
####MAP total deaths per million
library(dplyr)
library(stringr)
library(ggplot2)
library(maps)
############regression model###########
COVID_d <- read.csv("F:\\ResearchProject\\Jamal Sir\\COVID19-Factors\\datajune.csv")
head(COVID_d)
############NB regression model###########
model.3nb <- glm.nb(total_deaths_per_million ~ RS + population_density + aged_65_older
+ gdp_per_capita + WGI +
total_cases_per_million + total_tests_per_thousand +
offset(log(Day)), data = COVID_d)
summary(model.3nb)
exp(model.3nb$coefficients)
summary(model.3nb)
summary(model.3nb)
exp(model.3nb$coefficients)
exp(confint(model.3nb))
COVID_d <- read.csv("F:\\ResearchProject\\Jamal Sir\\COVID19-Factors\\datamarch.csv")
lm <- lm(total_deaths_per_million ~ RS + population_density + aged_65_older
+ gdp_per_capita + WGI +
total_cases_per_million + total_tests_per_thousand +
offset(log(Day)), data = COVID_d)
summary(lm)
############regression model###########
COVID_d <- read.csv("F:\\ResearchProject\\Jamal Sir\\COVID19-Factors\\datajune.csv")
head(COVID_d)
############NB regression model###########
model.3nb <- glm.nb(total_deaths_per_million ~ RS + population_density + aged_65_older
+ gdp_per_capita + WGI +
total_cases_per_million + total_tests_per_thousand +
offset(log(Day)), data = COVID_d)
summary(model.3nb)
############NB regression model###########
model.3nb <- glm.nb(total_deaths_per_million ~ RS + population_density + aged_65_older
+ gdp_per_capita + WGI +
total_cases_per_million + total_tests_per_thousand +
offset(log(Day)), data = COVID_d)
summary(model.3nb)
exp(model.3nb$coefficients)
exp(model.3nb$coefficients)
exp(confint(model.3nb))
exp(model.3nb$coefficients)
exp(confint(model.3nb))
############regression model###########
COVID_d <- read.csv("F:\\ResearchProject\\Jamal Sir\\COVID19-Factors\\datajuly1.csv")
head(COVID_d)
lm <- lm(total_cases ~ GHSI + population_density + aged_65_older
+ gdp_per_capita + WGI +
total_cases_per_million + total_tests_per_thousand +
offset(log(Day)), data = COVID_d)
lm <- lm(total_cases ~ GHSI + population_density + aged_65_older
+ gdp_per_capita + WGI +
total_cases_per_million + total_tests_per_thousand +
offset(log(Day)), data = COVID_d)
+ gdp_per_capita + WGI +
total_cases_per_million + total_tests_per_thousand), data = COVID_d)
lm <- lm(total_cases ~ GHSI + population_density + aged_65_older
+ gdp_per_capita + WGI +
total_cases_per_million + total_tests_per_thousand, data = COVID_d)
############regression model###########
COVID_d <- read.csv("F:\\ResearchProject\\Jamal Sir\\COVID19-Factors\\datajuly1.csv")
head(COVID_d)
############NB regression model###########
model.3nb <- glm.nb(total_cases ~ GHSI + population_density + aged_65_older
+ gdp_per_capita + WGI +
total_cases_per_million + total_tests_per_thousand +
offset(log(Day)), data = COVID_d)
library(MASS)
require(foreign)
require(ggplot2)
require(maptools)
####MAP total deaths per million
library(dplyr)
library(stringr)
library(ggplot2)
library(maps)
############regression model###########
COVID_d <- read.csv("F:\\ResearchProject\\Jamal Sir\\COVID19-Factors\\datajuly1.csv")
head(COVID_d)
lm <- lm(total_deaths_per_million ~ GHSI + population_density + aged_65_older
+ gdp_per_capita + WGI +
total_cases_per_million + total_tests_per_thousand +
offset(log(Day)), data = COVID_d)
summary(lm)
############NB regression model###########
model.3nb <- glm.nb(total_deaths_per_million ~ RS + population_density + aged_65_older
+ gdp_per_capita + WGI +
total_cases_per_million + total_tests_per_thousand +
offset(log(Day)), data = COVID_d)
summary(model.3nb)
############NB regression model###########
model.3nb <- glm.nb(total_deaths_per_million ~ RS + population_density + aged_65_older
+ gdp_per_capita + WGI +
total_cases_per_million + total_tests_per_thousand +
offset(log(Day)), data = COVID_d)
head(COVID_d)
############NB regression model###########
model.3nb <- glm.nb(total_deaths_per_million ~ RS , data = COVID_d)
############NB regression model###########
model.3nb <- glm.nb(total_deaths_per_million ~ RS + population_density + aged_65_older
+ gdp_per_capita + WGI , data = COVID_d)
############NB regression model###########
model.3nb <- glm.nb(total_deaths_per_million ~ RS + population_density + aged_65_older
+ gdp_per_capita + WGI +
total_cases_per_million + total_tests_per_thousand, data = COVID_d)
############NB regression model###########
model.3nb <- glm.nb(total_deaths_per_million ~ RS + population_density + aged_65_older
+ gdp_per_capita + WGI +
total_cases_per_million  +
offset(log(Day)), data = COVID_d)
############NB regression model###########
model.3nb <- glm.nb(total_deaths_per_million ~ RS + population_density + aged_65_older
+ gdp_per_capita + WGI +
total_cases_per_million  +
offset(log(Day)), data = COVID_d)
summary(model.3nb)
exp(model.3nb$coefficients)
exp(confint(model.3nb))
summary(model.3nb)
############regression model###########
COVID_d <- read.csv("F:\\ResearchProject\\Jamal Sir\\COVID19-Factors\\datajuly1.csv")
head(COVID_d)
model.3nb <- glm.nb(total_deaths_per_million ~ GHSI + population_density + aged_65_older
+ gdp_per_capita + WGI +
total_cases_per_million  +
offset(log(Day)), data = COVID_d)
summary(model.3nb)
exp(model.3nb$coefficients)
exp(model.3nb$coefficients)
exp(confint(model.3nb))
summary(model.3nb)
############NB regression model###########
model.3nb <- glm.nb(total_deaths_per_million ~ RS + population_density + aged_65_older
+ gdp_per_capita + WGI +
total_cases_per_million  +
offset(log(Day)), data = COVID_d)
summary(model.3nb)
exp(model.3nb$coefficients)
exp(confint(model.3nb))
model.3nb <- glm.nb(total_deaths_per_million ~ GHSI + population_density + aged_65_older
+ gdp_per_capita + WGI +
total_cases_per_million  +
offset(log(Day)), data = COVID_d)
summary(model.3nb)
exp(model.3nb$coefficients)
exp(confint(model.3nb))
############NB regression model###########
model.3nb <- glm.nb(total_deaths_per_million ~ RS + population_density + aged_65_older
+ gdp_per_capita + WGI +
total_cases_per_million  +
offset(log(Day)), data = COVID_d)
############regression model###########
COVID_d <- read.csv("F:\\ResearchProject\\Jamal Sir\\COVID19-Factors\\datajuly1.csv")
head(COVID_d)
lm <- lm(total_deaths_per_million ~ GHSI + population_density + aged_65_older
+ gdp_per_capita + WGI +
total_cases_per_million + total_tests_per_thousand +
offset(log(Day)), data = COVID_d)
summary(lm)
############NB regression model###########
model.3nb <- glm.nb(total_deaths_per_million ~ RS + population_density + aged_65_older
+ gdp_per_capita + WGI +
total_cases_per_million  +
offset(log(Day)), data = COVID_d)
summary(model.3nb)
exp(model.3nb$coefficients)
exp(confint(model.3nb))
model.3nb <- glm.nb(total_deaths_per_million ~ GHSI + population_density + aged_65_older
+ gdp_per_capita + WGI +
total_cases_per_million  +
offset(log(Day)), data = COVID_d)
summary(model.3nb)
exp(model.3nb$coefficients)
exp(confint(model.3nb))
setwd("F:\\ResearchProject\\Jamal Sir\\COVID19-Factors\\data")
dir()
COVID <- read.csv("~\\Covid19")
COVID <- read.csv("F:\\ResearchProject\\Jamal Sir\\COVID19-Factors\\datajuly1.csv")
head(COVID_d)
head(COVID)
COVID <- read.csv("F:\\ResearchProject\\Jamal Sir\\COVID19-Factors\\data\\Covid19.csv")
head(COVID)
COVID_july1 <- COVID[COVID$date = "2020-07-01"]
COVID_july1 <- COVID[COVID$date == "2020-07-01"]
COVID_july1 <- COVID[which (COVID$date == "2020-07-01")]
COVID$date
COVID_july1 <- COVID[which (COVID$date == "2020-07-01")]
COVID_july1 <- subset(COVID, COVID$date == "2020-07-01"]
COVID_july1 <- subset(COVID, COVID$date == "2020-07-01")
COVID_july1
COVID_july1$date
write.csv("F:\\ResearchProject\\Jamal Sir\\COVID19-Factors\\data\\COVID_july1.csv")
write.csv("F:\\ResearchProject\\Jamal Sir\\COVID19-Factors\\data\\COVID_july1.csv")
write.csv(COVID_july1.csv)
write.csv(COVID_july1)
setwd("F:\\ResearchProject\\Jamal Sir\\COVID19-Factors\\data")
write.csv(COVID_july1, "COVID_july1.csv")
COVID_july1
Day <- read.csv("F:\\ResearchProject\\Jamal Sir\\COVID19-Factors\\data\\Day.csv")
GHSI <- read.csv("F:\\ResearchProject\\Jamal Sir\\COVID19-Factors\\data\\GHSI.csv")
JEE_All3 <- read.csv("F:\\ResearchProject\\Jamal Sir\\COVID19-Factors\\data\\JEE_All3.csv")
WGI <- read.csv("F:\\ResearchProject\\Jamal Sir\\COVID19-Factors\\data\\WGI.csv")
finaldt <- merge(Day, GHSI, JEE_All3, WGI,  by="location")
finaldt <- merge(Day, GHSI,  by="location")
finaldt
finaldt1 <- merge(Day, GHSI,  by="location")
finaldt2 <- merge(JEE_All3, WGI,  by="location")
finaldt3 <- merge(finaldt1, finaldt2,  by="location")
finaldt3
finaldt3 <- merge(COVID_july1, finaldt3,  by="location")
finaldt1 <- merge(Day, GHSI,  by="location")
finaldt2 <- merge(JEE_All3, WGI,  by="location")
finaldt3 <- merge(finaldt1, finaldt2,  by="location")
finaldt <- merge(COVID_july1, finaldt3,  by="location")
View(finaldt)
library(MASS)
require(foreign)
require(ggplot2)
require(maptools)
model.3nb <- glm.nb(total_deaths_per_million ~ RS + population_density + aged_65_older
+ gdp_per_capita + WGI +
total_cases_per_million  +
offset(log(Day)), data = finaldt)
summary(model.3nb)
write.csv(finaldt, "finaldt.csv")
model.3nb <- glm.nb(total_deaths_per_million ~ RS + population_density + aged_65_older
+ gdp_per_capita + WGI +
total_cases_per_million  +
offset(log(Day)), data = finaldt)
summary(model.3nb)
exp(model.3nb$coefficients)
exp(confint(model.3nb))
model.3nb <- glm.nb(total_deaths_per_million ~ GHSI + population_density + aged_65_older
+ gdp_per_capita + WGI +
total_cases_per_million  +
offset(log(Day)), data = finaldt)
summary(model.3nb)
exp(model.3nb$coefficients)
exp(confint(model.3nb))
library(MASS)
require(foreign)
require(ggplot2)
require(maptools)
COVID <- read.csv("F:\\ResearchProject\\Jamal Sir\\COVID19-Factors\\Published - GHSI&JEE\\Covid19.csv")
head(COVID)
COVID_july1 <- subset(COVID, COVID$date == "7/1/2020")
Day <- read.csv("F:\\ResearchProject\\Jamal Sir\\COVID19-Factors\\Published - GHSI&JEE\\Day.csv")
GHSI <- read.csv("F:\\ResearchProject\\Jamal Sir\\COVID19-Factors\\Published - GHSI&JEE\\GHSI.csv")
JEE_All3 <- read.csv("F:\\ResearchProject\\Jamal Sir\\COVID19-Factors\\Published - GHSI&JEE\\JEE_All3.csv")
WGI <- read.csv("F:\\ResearchProject\\Jamal Sir\\COVID19-Factors\\Published - GHSI&JEE\\WGI.csv")
finaldt1 <- merge(Day, GHSI,  by="location")
finaldt2 <- merge(JEE_All3, WGI,  by="location")
finaldt3 <- merge(finaldt1, finaldt2,  by="location")
finaldt <- merge(COVID_july1, finaldt3,  by="location")
finaldt$GHSI[finaldt$GHSI == 0] <- NA
finaldt$WGI[finaldt$WGI == 0] <- NA
finaldt$RS[finaldt$RS == 0] <- NA
view(finaldt)
finaldt$RS[finaldt$RS == 0] <- NA
model.3nb <- glm.nb(total_deaths_per_million ~ RS + population_density + aged_65_older
+ gdp_per_capita + WGI +
total_cases_per_million  +
offset(log(Day)), data = finaldt)
summary(model.3nb)
exp(model.3nb$coefficients)
exp(confint(model.3nb))
model.3nb <- glm.nb(total_deaths_per_million ~ GHSI + population_density + aged_65_older
+ gdp_per_capita + WGI +
total_cases_per_million  +
offset(log(Day)), data = finaldt)
summary(model.3nb)
library(MASS)
require(foreign)
require(ggplot2)
require(maptools)
COVID <- read.csv("F:\\ResearchProject\\Jamal Sir\\COVID19-Factors\\Published - GHSI&JEE\\Covid19.csv")
head(COVID)
COVID_july1 <- subset(COVID, COVID$date == "7/1/2020")
Day <- read.csv("F:\\ResearchProject\\Jamal Sir\\COVID19-Factors\\Published - GHSI&JEE\\Day.csv")
GHSI <- read.csv("F:\\ResearchProject\\Jamal Sir\\COVID19-Factors\\Published - GHSI&JEE\\GHSI.csv")
JEE_All3 <- read.csv("F:\\ResearchProject\\Jamal Sir\\COVID19-Factors\\Published - GHSI&JEE\\JEE_All3.csv")
WGI <- read.csv("F:\\ResearchProject\\Jamal Sir\\COVID19-Factors\\Published - GHSI&JEE\\WGI.csv")
finaldt1 <- merge(Day, GHSI,  by="location")
finaldt2 <- merge(JEE_All3, WGI,  by="location")
finaldt3 <- merge(finaldt1, finaldt2,  by="location")
finaldt <- merge(COVID_july1, finaldt3,  by="location")
finaldt$GHSI[finaldt$GHSI == 0] <- NA
finaldt$RS[finaldt$RS == 0] <- NA
model.3nb <- glm.nb(total_deaths_per_million ~ RS + population_density + aged_65_older
+ gdp_per_capita + WGI +
total_cases_per_million  +
offset(log(Day)), data = finaldt)
summary(model.3nb)
exp(model.3nb$coefficients)
exp(confint(model.3nb))
model.3nb <- glm.nb(total_deaths_per_million ~ GHSI + population_density + aged_65_older
+ gdp_per_capita + WGI +
total_cases_per_million  +
offset(log(Day)), data = finaldt)
summary(model.3nb)
exp(model.3nb$coefficients)
finaldt$WGI[finaldt$WGI == 0] <- NA
finaldt$RS[finaldt$RS == 0] <- NA
model.3nb <- glm.nb(total_deaths_per_million ~ RS + population_density + aged_65_older
+ gdp_per_capita + WGI +
total_cases_per_million  +
offset(log(Day)), data = finaldt)
summary(model.3nb)
exp(model.3nb$coefficients)
exp(confint(model.3nb))
model.3nb <- glm.nb(total_deaths_per_million ~ GHSI + population_density + aged_65_older
+ gdp_per_capita + WGI +
total_cases_per_million  +
offset(log(Day)), data = finaldt)
summary(model.3nb)
exp(model.3nb$coefficients)
exp(confint(model.3nb))
